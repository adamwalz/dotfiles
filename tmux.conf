#######################
#   General Settings   #
########################

# use 256 term for pretty colors
set-option -g default-terminal "screen-256color"

set-option -s focus-events on

set-option -g prefix C-a

set-option -q -g status-utf8 on
set-window-option -q -g utf8 on

set-option -g base-index 1

set-option -g renumber-windows on


set-option -g mouse on

########################
#     Key Bindings     #
########################

# Unbind default key bindings, we're going to override
unbind-key %    # split-window -h
unbind-key '"'  # split-window

# open session chooser
bind-key -n Home choose-tree

# window splitting
bind-key | split-window -h -c "#{pane_current_path}"
bind-key - split-window -v -c "#{pane_current_path}"

# quickly resize panes
bind-key = select-layout main-vertical
bind-key -r H resize-pane -L 2
bind-key -r J resize-pane -D 2
bind-key -r K resize-pane -U 2
bind-key -r L resize-pane -R 2

# quickly switch panes
bind-key o select-pane -t :.+

# cycling windows
bind-key -n S-right next
bind-key -n S-left prev

# create session
bind-key C-c new-session

# moving windows
bind-key -n C-S-right swap-window -t +1
bind-key -n C-S-left swap-window -t -1

# Kill pane/window/session shortcuts
bind-key x kill-pane
bind-key X kill-window
bind-key C-x confirm-before -p "kill other windows? (y/n)" "kill-window -a"
bind-key Q confirm-before -p "kill-session #S? (y/n)" kill-session

# Rename window and session
bind-key r command-prompt -I "#{window_name}" "rename-window '%%'"
bind-key R command-prompt -I "#{session_name}" "rename-session '%%'"

# Merge session with another one (e.g. move all windows)
# If you use adhoc 1-window sessions, and you want to preserve session upon exit
# but don't want to create a lot of small unnamed 1-window sessions around
# move all windows from current session to main named one (dev, work, etc)
bind-key C-u command-prompt -p "Session to merge with: " \
   "run-shell 'yes | head -n #{session_windows} | xargs -I {} -n 1 tmux movew -t %%'"

# Detach from session
bind-key d detach
bind-key D if -F '#{session_many_attached}' \
    'confirm-before -p "Detach other clients? (y/n)" "detach -a"' \
    'display "Session has only 1 client attached"'

# Hide status bar on demand
bind-key C-s if -F '#{s/off//:status}' 'set status off' 'set status on'

# clear both screen and history
bind-key -n C-l send-keys C-l \; run 'sleep 0.2' \; clear-history

# find session
bind-key C-f command-prompt -p find-session 'switch-client -t %%'

bind-key -T root F12 \
  set key-table 'nested-inactive' \;\
  set prefix None \;\
  set status off

bind-key -T 'nested-inactive' F12 \
  set -u key-table \;\
  set -u prefix \;\
  set status on

####################################################
#     Window monitoring for activity and silence   #
####################################################

# Toggle monitoring activity
bind-key s set-window-option monitor-activity \; display-message 'Monitor window activity [#{?monitor-activity,ON,OFF}]'
bind-key S if -F '#{monitor-silence}' \
    'set-window-option monitor-silence 0 ; display-message "Monitor window silence [OFF]"' \
    'command-prompt -p "Monitor silence: interval (s)" "set-window-option monitor-silence %%"'

# Activity bell and whistles
set-option -g visual-activity on

##################################################
#        Copy mode, scroll and clipboard         #
##################################################

set-option -g @copy_use_osc52_fallback on

# use vim key bindings
# After entering command mode (<prefix> :) press Esc
# Then for example you can move left and right with the h and l keys
# Scroll previous commands with j and k keys
# Press Ctrl-C to exit command mode
set-window-option -g mode-keys vi

# paste
bind-key b list-buffers  # list paste buffers
bind-key p paste-buffer  # paste from the top paste buffer
bind-key P choose-buffer # choose which buffer to paste from

# trigger copy mode by
bind-key Enter copy-mode

# vi-copy is gone in tmux >= 2.4. copy-mode-vi still exists. https://github.com/tmux/tmux/commit/76d6d3641f271be1756e41494960d96714e7ee58
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi C-v send -X rectangle-toggle
bind-key -T copy-mode-vi y send -X copy-selection-and-cancel
bind-key -T copy-mode-vi Escape send -X cancel
bind-key -T copy-mode-vi H send -X start-of-line
bind-key -T copy-mode-vi L send -X end-of-line

###########################
#         Plugins         #
###########################

run-shell ~/.tmux/plugins/tmux-sensible/sensible.tmux

# Set the catppuccin flavor
set-option -g @catppuccin_flavour 'mocha'
set-option -g @catppuccin_window_status_style "rounded"

# Window status format settings
set-option -g @catppuccin_window_left_separator "█"
set-option -g @catppuccin_window_right_separator "█ "
set-option -g @catppuccin_window_middle_separator "  █"
set-option -g @catppuccin_window_number_position "right"

# Window text settings
set-option -g @catppuccin_window_text "#W"
set-option -g @catppuccin_window_current_text "#W"

run ~/.tmux/plugins/catppuccin/catppuccin.tmux

# Status line configuration
set-option -g status-left-length 100
set-option -g status-left "#{E:@catppuccin_status_session}"

set-option -g status-right-length 100
set-option -gF status-right "#{E:@catppuccin_status_cpu}"
set-option -agF status-right "#{?SSH_CONNECTION,#{E:@catppuccin_status_host},#{E:@catppuccin_status_battery}}"
set-option -ag status-right "#{E:@catppuccin_status_date_time}"
set-option -g @catppuccin_date_time_text ' #(TZ="UTC" date +"%%Y-%%m-%%d %%H:%%MZ")'

run ~/.tmux/plugins/tmux-cpu/cpu.tmux
run ~/.tmux/plugins/tmux-battery/battery.tmux
