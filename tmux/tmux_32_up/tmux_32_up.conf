#------------------------------------------------------------------------------
#          FILE:  tmux.conf
#   DESCRIPTION:  Configures tmux terminal multiplexer
#        AUTHOR:  Adam Walz <adam@adamwalz.net>
#       VERSION:  5.0.0
#
# See the following for examples:
# - https://gist.github.com/shinzui/866897
# - https://github.com/samoshkin/tmux-config/blob/master/tmux/tmux.conf
# - https://github.com/gpakosz/.tmux
#------------------------------------------------------------------------------

#######################
#   General Settings   #
########################

# use 256 term for pretty colors
set-option -g default-terminal "screen-256color"
if-shell 'infocmp -x tmux-256color > /dev/null 2>&1' 'set-option -g default-terminal "tmux-256color"'

set-option -s focus-events on

# tmux prefix
unbind-key C-b
set-option -g prefix C-j
set-option -g prefix2 C-b # Original tmux compatible prefix
bind-key C-b send-prefix -2
bind-key j send-prefix

set-option -q -g status-utf8 on                  # expect UTF-8 (tmux < 2.2)
set-window-option -q -g utf8 on

# increase scroll-back history
set-option -g history-limit 900000

# set the number of buffers
set-option -g buffer-limit 20

# don't allow tmux to automatically name window titles
set-option -g allow-rename off
set-window-option -g automatic-rename off

# Set parent terminal title to reflect current window in tmux session
set-option -g set-titles on

# xterm-style function keys
set-window-option -g xterm-keys on

# decrease command delay (increases vim responsiveness)
set-option -sg escape-time 10

# allow multiple commands to be entered without pressing the prefix-key again
set-option -g repeat-time 600

# time for status messages to linger in ms
set-option -g display-panes-time 800
set-option -g display-time 1500

# start window index at 1
set-option -g base-index 1

# start pane index at 1
set-window-option -g pane-base-index 1

# re-number windows when one is closed
set-option -g renumber-windows on

# enable mouse by default to scroll buffer. can be turned off with <prefix> m
set-option -g mouse on

########################
#     Key Bindings     #
########################

# Unbind default key bindings, we're going to override
unbind-key "\$" # rename-session
unbind-key ,    # rename-window
unbind-key %    # split-window -h
unbind-key '"'  # split-window
unbind-key "}"  # swap-pane -D
unbind-key "{"  # swap-pane -U
unbind-key [    # paste-buffer
unbind-key ]
unbind-key "'"  # select-window
unbind-key n    # next-window
unbind-key p    # previous-window
unbind-key l    # last-window
unbind-key M-n  # next window with alert
unbind-key M-p  # next window with alert
unbind-key o    # focus thru panes
unbind-key &    # kill-window
unbind-key "#"  # list-buffer
unbind-key =    # choose-buffer
unbind-key z    # zoom-pane
unbind-key s    # choose-tree -Zs
unbind-key w    # choose-tree -Zw
unbind-key M-Up  # resize 5 rows up
unbind-key M-Down # resize 5 rows down
unbind-key M-Right # resize 5 rows right
unbind-key M-Left # resize 5 rows left
unbind-key Tab # last-window

# open session chooser
bind-key -n Home choose-tree

# window splitting
bind-key | split-window -h -c "#{pane_current_path}"
bind-key - split-window -v -c "#{pane_current_path}"

# Prompt to rename window right after it's created
set-hook -g after-new-window 'command-prompt -I "#W" "rename-window"'

# new window retains current path, possible values are:
#   - true
#   - false (default)
#   - disabled (do not modify new-window bindings)
tmux_conf_new_window_retain_current_path=false

# new pane retains current path, possible values are:
#   - true (default)
#   - false
#   - disabled (do not modify split-window bindings)
tmux_conf_new_pane_retain_current_path=true

# quickly resize panes
bind-key = select-layout main-vertical
bind-key < resize-pane -L 25
bind-key > resize-pane -R 25
bind-key -r H resize-pane -L 2
bind-key -r J resize-pane -D 2
bind-key -r K resize-pane -U 2
bind-key -r L resize-pane -R 2

# Maximize pane into its own window temporarily
bind-key + run '~/.tmux/tmux_32_up/commands/maximize_pane.sh "#{session_name}" #D'

# Zoom pane
bind-key z resize-pane -Z

# Select pane and windows
bind-key -r C-[ previous-window
bind-key -r C-h previous-window
bind-key -r C-] next-window
bind-key -r C-l next-window
bind-key -r [ select-pane -t :.-
bind-key -r ] select-pane -t :.+
bind-key -r Tab last-window   # cycle thru MRU tabs
bind-key -r C-o swap-pane -D
bind-key -r h select-pane -L  # move left
bind-key -r j select-pane -D  # move down
bind-key -r k select-pane -U  # move up
bind-key -r l select-pane -R  # move right

# list choice (tmux < 2.4)
# vi-choice is gone in tmux >= 2.4. https://github.com/tmux/tmux/commit/76d6d3641f271be1756e41494960d96714e7ee58
run -b 'tmux bind-key -t vi-choice h tree-collapse 2> /dev/null || true'
run -b 'tmux bind-key -t vi-choice l tree-expand 2> /dev/null || true'
run -b 'tmux bind-key -t vi-choice K start-of-list 2> /dev/null || true'
run -b 'tmux bind-key -t vi-choice J end-of-list 2> /dev/null || true'
run -b 'tmux bind-key -t vi-choice H tree-collapse-all 2> /dev/null || true'
run -b 'tmux bind-key -t vi-choice L tree-expand-all 2> /dev/null || true'
run -b 'tmux bind-key -t vi-choice Escape cancel 2> /dev/null || true'

# edit mode (tmux < 2.4)
# vi-edit is gone in tmux >= 2.4. https://github.com/tmux/tmux/commit/76d6d3641f271be1756e41494960d96714e7ee58
run -b 'tmux bind-key -ct vi-edit H start-of-line 2> /dev/null || true'
run -b 'tmux bind-key -ct vi-edit L end-of-line 2> /dev/null || true'
run -b 'tmux bind-key -ct vi-edit q cancel 2> /dev/null || true'
run -b 'tmux bind-key -ct vi-edit Escape cancel 2> /dev/null || true'

# toggle mouse
bind m run "~/.tmux/tmux_32_up/commands/toggle_mouse.sh"

# Link window
bind-key L command-prompt -p "Link window from (session:window): " "link-window -s %% -a"

# quickly switch panes
bind-key o select-pane -t :.+

# cycling windows
bind-key -n S-right next
bind-key -n S-left prev

# create session
bind-key C-c new-session

# moving windows
bind-key -n C-S-right swap-window -t +1
bind-key -n C-S-left swap-window -t -1

# prompt for session name when creating a new session, possible values are:
#   - true
#   - false (default)
#   - disabled (do not modify new-session bindings)
tmux_conf_new_session_prompt=false

# cycling sessions
bind-key -n S-Up switch-client -p
bind-key -n S-Down switch-client -n
bind-key BTab switch-client -l # move to last session with shift-tab

# Kill pane/window/session shortcuts
bind-key x kill-pane
bind-key X kill-window
bind-key C-x confirm-before -p "kill other windows? (y/n)" "kill-window -a"
bind-key Q confirm-before -p "kill-session #S? (y/n)" kill-session

# Rename window and session
bind-key r command-prompt -I "#{window_name}" "rename-window '%%'"
bind-key R command-prompt -I "#{session_name}" "rename-session '%%'"

# Merge session with another one (e.g. move all windows)
# If you use adhoc 1-window sessions, and you want to preserve session upon exit
# but don't want to create a lot of small unnamed 1-window sessions around
# move all windows from current session to main named one (dev, work, etc)
bind-key C-u command-prompt -p "Session to merge with: " \
   "run-shell 'yes | head -n #{session_windows} | xargs -I {} -n 1 tmux movew -t %%'"

# Detach from session
bind-key d detach
bind-key D if -F '#{session_many_attached}' \
    'confirm-before -p "Detach other clients? (y/n)" "detach -a"' \
    'display "Session has only 1 client attached"'

# edit the config file
bind-key C-e new-window -n "~/.tmux/tmux_32_up/tmux_32_up.conf" "EDITOR=\${EDITOR//mvim/vim} && EDITOR=\${EDITOR//gvim/vim} && \${EDITOR:-vim} ~/.tmux/tmux_32_up/tmux_32_up.conf && tmux source ~/.tmux/tmux_32_up/tmux_32_up.conf && tmux display \"Config reloaded!\""

# force a reload of the config file
bind-key C-r source-file ~/.tmux/tmux_32_up/tmux_32_up.conf \; display "Config reloaded!"

# Hide status bar on demand
bind-key C-s if -F '#{s/off//:status}' 'set status off' 'set status on'

# clear both screen and history
bind-key -n C-l send-keys C-l \; run 'sleep 0.2' \; clear-history

# find session
bind-key C-f command-prompt -p find-session 'switch-client -t %%'

# Find urls in pane and open in browser
bind-key U run "~/.tmux/tmux_32_up/commands/urlview.sh _urlview #{pane_id}"

# facebook path picker (fpp)
bind-key F run "~/.tmux/tmux_32_up/commands/fpp.sh _fpp #{pane_id} #{pane_current_path}"

####################################################
#     Window monitoring for activity and silence   #
####################################################

# Toggle monitoring activity
bind-key s set-window-option monitor-activity \; display-message 'Monitor window activity [#{?monitor-activity,ON,OFF}]'
bind-key S if -F '#{monitor-silence}' \
    'set-window-option monitor-silence 0 ; display-message "Monitor window silence [OFF]"' \
    'command-prompt -p "Monitor silence: interval (s)" "set-window-option monitor-silence %%"'

# Activity bell and whistles
set-option -g visual-activity on

##################################################
#        Copy mode, scroll and clipboard         #
##################################################

set-option -g @copy_use_osc52_fallback on

# use vim key bindings
# After entering command mode (<prefix> :) press Esc
# Then for example you can move left and right with the h and l keys
# Scroll previous commands with j and k keys
# Press Ctrl-C to exit command mode
set-window-option -g mode-keys vi

# in copy mode, copying selection also copies to the OS clipboard
#   - true
#   - false (default)
#   - disabled
# on macOS, this requires installing reattach-to-user-namespace, see README.md
# on Linux, this requires xsel or xclip
tmux_conf_copy_to_os_clipboard=false

# paste
bind-key b list-buffers  # list paste buffers
bind-key p paste-buffer  # paste from the top paste buffer
bind-key P choose-buffer # choose which buffer to paste from

# trigger copy mode by
bind-key Enter copy-mode

# vi-copy is gone in tmux >= 2.4. copy-mode-vi still exists. https://github.com/tmux/tmux/commit/76d6d3641f271be1756e41494960d96714e7ee58
run -b 'tmux bind-key -t vi-copy v begin-selection 2> /dev/null || true'
run -b 'tmux bind-key -T copy-mode-vi v send -X begin-selection 2> /dev/null || true'
run -b 'tmux bind-key -t vi-copy C-v rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind-key -T copy-mode-vi C-v send -X rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind-key -t vi-copy y copy-selection 2> /dev/null || true'
run -b 'tmux bind-key -T copy-mode-vi y send -X copy-selection-and-cancel 2> /dev/null || true'
run -b 'tmux bind-key -t vi-copy Escape cancel 2> /dev/null || true'
run -b 'tmux bind-key -T copy-mode-vi Escape send -X cancel 2> /dev/null || true'
run -b 'tmux bind-key -t vi-copy H start-of-line 2> /dev/null || true'
run -b 'tmux bind-key -T copy-mode-vi H send -X start-of-line 2> /dev/null || true'
run -b 'tmux bind-key -t vi-copy L end-of-line 2> /dev/null || true'
run -b 'tmux bind-key -T copy-mode-vi L send -X end-of-line 2> /dev/null || true'

# copy to X11 clipboard
if -b 'command -v xsel > /dev/null 2>&1' 'bind-key y run -b "tmux save-buffer - | xsel -i -b"'
if -b '! command -v xsel > /dev/null 2>&1 && command -v xclip > /dev/null 2>&1' 'bind-key y run -b "tmux save-buffer - | xclip -i -selection clipboard >/dev/null 2>&1"'
# copy to macOS clipboard
if -b 'command -v pbcopy > /dev/null 2>&1' 'bind-key y run -b "tmux save-buffer - | pbcopy"'
if -b 'command -v reattach-to-user-namespace > /dev/null 2>&1' 'bind-key y run -b "tmux save-buffer - | reattach-to-user-namespace pbcopy"'
# copy to Windows clipboard
if -b 'command -v clip.exe > /dev/null 2>&1' 'bind-key y run -b "tmux save-buffer - | clip.exe"'
if -b '[ -c /dev/clipboard ]' 'bind-key y run -b "tmux save-buffer - > /dev/clipboard"'

###########################
#          Theme          #
###########################

# RGB 24-bit color support (tmux >= 2.2), possible values are:
#  - true
#  - false
#  - auto (default)
#
# automatic detection relies on the COLORTERM environment variable being defined
# to 'truecolor' or '24bit' or '$ tput colors' answering '16777216'
# see https://github.com/termstandard/colors
tmux_conf_24b_color=auto

# These are named colors, just for convenience
color_black="colour0"              # #000000
color_white="colour15"             # #ffffff

color_green="colour2"              # #008000
color_darkestgreen="colour22"      # #005f00
color_darkgreen="colour28"         # #008700
color_mediumgreen="colour70"       # #5faf00
color_brightgreen="colour82"       # #5fff00

color_darkestcyan="colour23"       # #005f5f
color_darkcyan="colour74"          # #5fafd7
color_mediumcyan="colour117"       # #87d7ff
color_brightcyan="colour159"       # #afffff

color_darkestblue="colour24"       # #005f87
color_darkblue="colour31"          # #0087af
color_brightblue="colour39"        # #00afff

color_red="colour160"              # #d70000
color_darkestred="colour52"        # #5f0000
color_darkred="colour88"           # #870000
color_mediumred="colour124"        # #af0000
color_brightred="colour160"        # #d70000
color_brightestred="colour196"     # #ff0000

color_darkestpurple="colour55"     # #5f00af
color_mediumpurple="colour98"      # #875fd7
color_lightpurple="colour189"      # #d7d7ff
color_deeppink="colour199"         # #ff00af

color_darkorange="colour94"        # #875f00
color_mediumorange="colour166"     # #d75f00
color_brightorange="colour208"     # #ff8700
color_brightestorange="colour214"  # #ffaf00

color_yellow="colour11"            # #ffff00
color_brightyellow="colour220"     # #ffd700

color_grey3="colour232"            # #080808 (dark grey)
color_grey7="colour233"            # #121212
color_grey11="colour234"           # #1c1c1c
color_grey15="colour235"           # #262626
color_grey19="colour236"           # #303030
color_grey23="colour237"           # #3a3a3a
color_grey27="colour238"           # #444444
color_grey30="colour239"           # #4e4e4e
color_grey35="colour240"           # #585858
color_grey39="colour241"           # #626262
color_grey42="colour242"           # #6c6c6c
color_grey46="colour243"           # #767676
color_grey50="colour244"           # #808080
color_grey54="colour245"           # #8a8a8a (light grey)
color_grey58="colour246"           # #949494
color_grey62="colour247"           # #9e9e9e
color_grey66="colour248"           # #a8a8a8
color_grey70="colour249"           # #b2b2b2
color_grey74="colour250"           # #bcbcbc
color_grey78="colour251"           # #c6c6c6
color_grey82="colour252"           # #d0d0d0
color_grey85="colour253"           # #dadada
color_grey89="colour254"           # #e4e4e4 (white-ish)
color_grey93="colour255"           # #eeeeee

color_lightyellowgreen="colour106" # #87af00
color_gold3="color178"             # #d7af00
color_orangered="colour202"        # #ff5f00
color_steelblue="colour67"         # #5f87af
color_darkorange3="colour166"      # #d75f00
color_skyblue1="colour117"         # #87d7ff
color_khaki1="colour228"           # #ffff87

color_level_ok="$color_green"
color_level_warn="$color_yellow"
color_level_stress="$color_red"

color_solarized_base03="#1c1c1c"
color_solarized_base02="#262626"
color_solarized_base01="#585858"
color_solarized_base00="#626262"
color_solarized_base0="#808080"
color_solarized_base1="#8a8a8a"
color_solarized_base2="#e4e4e4"
color_solarized_base3="#ffffd7"
color_solarized_yellow="#af8700"
color_solarized_orange="#d75f00"
color_solarized_red="#d70000"
color_solarized_magenta="#af005f"
color_solarized_violet="#5f5faf"
color_solarized_blue="#0087ff"
color_solarized_cyan="#00afaf"
color_solarized_green="#5f8700"

color_monokai_foreground="#f8f8f2"
color_monokai_background="#272822"
color_monokai_comments="#75715e"
color_monokai_emphasis="#f8f8f0"
color_monokai_line_number="#8f908a"
color_monokai_highlight="#3e3d31"
color_monokai_highlight_line="#3c3d37"
color_monokai_grey="#64645e"
color_monokai_yellow="#e6db74"
color_monokai_orange="#fd971f"
color_monokai_red="#f92672"
color_monokai_magenta="#fd5ff0"
color_monokai_blue="#66d9ef"
color_monokai_green="#a6e22e"
color_monokai_cyan="#a1eef4"
color_monokai_violet="#ae8fe4"

######## Light Theme  ###########
tmux_conf_theme_color_status_fg_light="$color_solarized_base00" # status bar behind status-left, status-right, and window list. Default Text
tmux_conf_theme_color_window_status_last_bg_light="$color_solarized_base00" # numbered window you last (most recently) had focus on
tmux_conf_theme_color_pane_indicator_light="$color_solarized_base00" # numbered pane indicators (when you hit <prefix> + q)
tmux_conf_theme_color_window_status_fg_light="$color_solarized_base01" # numbered windows other than the current window and last (most recently) accessed window
tmux_conf_theme_color_message_command_fg_light="$color_solarized_base02" # when entering vi command mode by pressing escape after tmux command more. See examples from set-window-option -g mode-keys vi
tmux_conf_theme_color_message_fg_light="$color_solarized_base0" # when a message appears such as "Config reloaded!" with <prefix> C-r
tmux_conf_theme_color_pane_border_fg_light="$color_solarized_base1" # pane border around panes that you don't have focus on
tmux_conf_theme_color_status_bg_light="$color_solarized_base2" # status bar behind status-left, status-right, and window list
tmux_conf_theme_color_mode_fg_light="$color_solarized_base2" # copy-mode (<prefix> Enter), choose mode (<prefix> Home), view mode (e.g. <prefix> ?)
tmux_conf_theme_color_window_status_current_fg_light="$color_solarized_base2" # numbered window on the window you currently have focus on
tmux_conf_theme_color_window_status_last_fg_light="$color_solarized_base2" # numbered window you last (most recently) had focus on
tmux_conf_theme_color_pane_border_bg_light="$color_solarized_base2" # pane border around panes that you don't have focus on
tmux_conf_theme_color_pane_active_border_bg_light="$color_solarized_base2" # pane border around the pane you currently have focus on
tmux_conf_theme_color_window_status_bg_light="$color_solarized_base3" # numbered windows other than the current window and last (most recently) accessed window
tmux_conf_theme_color_focused_pane_bg_light="$color_solarized_base3" # pane background on the pane you currently have focus on IF $tmux_conf_theme_highlight_focused_pane is set to true
tmux_conf_theme_color_message_bg_light="$color_solarized_base3" # when enterping tmux command mode with <prefix> : or when a message appears such as "Config reloaded!" with <prefix> C-r
tmux_conf_theme_color_window_status_bell_fg_light="$color_solarized_base3"
tmux_conf_theme_color_window_status_current_bg_light="$color_solarized_yellow" # numbered window on the window you currently have focus on
tmux_conf_theme_color_pane_active_indicator_light="$color_solarized_yellow" # numbered pane indicators (when you hit <prefix> + q)
tmux_conf_theme_color_clock_color_light="$color_solarized_yellow" # clock <prefix> t
tmux_conf_theme_color_message_command_bg_light="$color_solarized_orange" # when entering vi command mode by pressing escape after tmux command more. See examples from set-window-option -g mode-keys vi
tmux_conf_theme_color_pane_active_border_light="$color_solarized_orange" # pane border around the pane you currently have focus on
tmux_conf_theme_color_mode_bg_light="$color_solarized_cyan" # copy-mode (<prefix> Enter), choose mode (<prefix> Home), view mode (e.g. <prefix> ?)
tmux_conf_theme_color_window_status_bell_bg_light="$color_solarized_violet"

######## Dark Theme  ###########
tmux_conf_theme_color_status_fg_dark="$color_monokai_foreground" # status bar behind status-left, status-right, and window list. Default Text
tmux_conf_theme_color_window_status_last_bg_dark="$color_monokai_cyan" # numbered window you last (most recently) had focus on
tmux_conf_theme_color_pane_indicator_dark="$color_monokai_foreground" # numbered pane indicators (when you hit <prefix> + q)
tmux_conf_theme_color_window_status_fg_dark="$color_monokai_foreground" # numbered windows other than the current window and last (most recently) accessed window
tmux_conf_theme_color_message_command_fg_dark="$color_monokai_foreground" # when entering vi command mode by pressing escape after tmux command more. See examples from set-window-option -g mode-keys vi
tmux_conf_theme_color_message_fg_dark="$color_monokai_foreground" # when a message appears such as "Config reloaded!" with <prefix> C-r
tmux_conf_theme_color_pane_border_fg_dark=$color_monokai_foreground"" # pane border around panes that you don't have focus on
tmux_conf_theme_color_status_bg_dark="$color_monokai_background" # status bar behind status-left, status-right, and window list
tmux_conf_theme_color_mode_fg_dark="$color_monokai_background" # copy-mode (<prefix> Enter), choose mode (<prefix> Home), view mode (e.g. <prefix> ?)
tmux_conf_theme_color_window_status_current_fg_dark="$color_monokai_background" # numbered window on the window you currently have focus on
tmux_conf_theme_color_window_status_last_fg_dark="$color_monokai_background" # numbered window you last (most recently) had focus on
tmux_conf_theme_color_pane_border_bg_dark="$color_monokai_background" # pane border around panes that you don't have focus on
tmux_conf_theme_color_pane_active_border_bg_dark="$color_monokai_background" # pane border around the pane you currently have focus on
tmux_conf_theme_color_window_status_bg_dark="$color_monokai_grey" # numbered windows other than the current window and last (most recently) accessed window
tmux_conf_theme_color_focused_pane_bg_dark="$color_monokai_background" # pane background on the pane you currently have focus on IF $tmux_conf_theme_highlight_focused_pane is set to true
tmux_conf_theme_color_message_bg_dark="$color_monokai_background" # when enterping tmux command mode with <prefix> : or when a message appears such as "Config reloaded!" with <prefix> C-r
tmux_conf_theme_color_window_status_bell_fg_dark="$color_monokai_background"
tmux_conf_theme_color_window_status_current_bg_dark="$color_monokai_blue" # numbered window on the window you currently have focus on
tmux_conf_theme_color_pane_active_indicator_dark="$color_monokai_blue" # numbered pane indicators (when you hit <prefix> + q)
tmux_conf_theme_color_clock_color_dark="$color_monokai_blue" # clock <prefix> t
tmux_conf_theme_color_message_command_bg_dark="$color_monokai_orange" # when entering vi command mode by pressing escape after tmux command more. See examples from set-window-option -g mode-keys vi
tmux_conf_theme_color_pane_active_border_dark="$color_monokai_orange" # pane border around the pane you currently have focus on
tmux_conf_theme_color_mode_bg_dark="$color_monokai_cyan" # copy-mode (<prefix> Enter), choose mode (<prefix> Home), view mode (e.g. <prefix> ?)
tmux_conf_theme_color_window_status_bell_bg_dark="$color_monokai_violet"


# window style
tmux_conf_theme_window_fg_light="#657b83"
tmux_conf_theme_window_bg_light="$color_solarized_base2"
tmux_conf_theme_window_fg_dark="$color_monokai_foreground"
tmux_conf_theme_window_bg_dark="$color_monokai_background"

# highlight focused pane (tmux >= 2.1), possible values are:
#   - true
#   - false (default)
tmux_conf_theme_highlight_focused_pane=false

# focused pane colors:
tmux_conf_theme_focused_pane_bg_light="$tmux_conf_theme_color_focused_pane_bg_light"
tmux_conf_theme_focused_pane_bg_dark="$tmux_conf_theme_color_focused_pane_bg_dark"

# pane border style, possible values are:
#   - thin (default)
#   - fat
tmux_conf_theme_pane_border_style=thin

# pane borders colors:
tmux_conf_theme_pane_border_fg_light="$tmux_conf_theme_color_pane_border_fg_light"
tmux_conf_theme_pane_border_fg_dark="$tmux_conf_theme_color_pane_border_fg_dark"
tmux_conf_theme_pane_active_border_light="$tmux_conf_theme_color_pane_active_border_light"
tmux_conf_theme_pane_active_border_dark="$tmux_conf_theme_color_pane_active_border_dark"

# pane indicator colors (when you hit <prefix> + q)
tmux_conf_theme_pane_indicator_light="$tmux_conf_theme_color_pane_indicator_light"
tmux_conf_theme_pane_indicator_dark="$tmux_conf_theme_color_pane_indicator_dark"
tmux_conf_theme_pane_active_indicator_light="$tmux_conf_theme_color_pane_active_indicator_light"
tmux_conf_theme_pane_active_indicator_dark="$tmux_conf_theme_color_pane_active_indicator_dark"

# status line style
tmux_conf_theme_message_fg_light="$tmux_conf_theme_message_fg_light"
tmux_conf_theme_message_fg_dark="$tmux_conf_theme_message_fg_dark"
tmux_conf_theme_message_bg_light="$tmux_conf_theme_color_message_bg_light"
tmux_conf_theme_message_bg_dark="$tmux_conf_theme_color_message_bg_dark"
tmux_conf_theme_message_attr="bold"

# status line command style (<prefix> : Escape)
tmux_conf_theme_message_command_fg_light="$tmux_conf_theme_color_message_command_fg_light"
tmux_conf_theme_message_command_fg_dark="$tmux_conf_theme_color_message_command_fg_dark"
tmux_conf_theme_message_command_bg_light="$tmux_conf_theme_message_command_bg_light"
tmux_conf_theme_message_command_bg_dark="$tmux_conf_theme_message_command_bg_dark"
tmux_conf_theme_message_command_attr="bold"

# window modes style
tmux_conf_theme_mode_fg_light="$tmux_conf_theme_color_mode_fg_light"
tmux_conf_theme_mode_fg_dark="$tmux_conf_theme_color_mode_fg_dark"
tmux_conf_theme_mode_bg_light="$tmux_conf_theme_color_mode_bg_light"
tmux_conf_theme_mode_bg_dark="$tmux_conf_theme_color_mode_bg_dark"
tmux_conf_theme_mode_attr="bold"

# status line style
tmux_conf_theme_status_fg_light="$tmux_conf_theme_color_status_fg_light"
tmux_conf_theme_status_fg_dark="$tmux_conf_theme_color_status_fg_dark"
tmux_conf_theme_status_bg_light="$tmux_conf_theme_color_status_bg_light"
tmux_conf_theme_status_bg_dark="$tmux_conf_theme_color_status_bg_dark"
tmux_conf_theme_status_attr="none"

# terminal title
#   - built-in variables are:
#     - #{circled_window_index}
#     - #{circled_session_name}
#     - #{hostname}
#     - #{hostname_ssh}
#     - #{hostname_full}
#     - #{hostname_full_ssh}
#     - #{username}
#     - #{username_ssh}
tmux_conf_theme_terminal_title="#h ❐ #S ● #I #W"

# window status style
#   - built-in variables are:
#     - #{circled_window_index}
#     - #{circled_session_name}
#     - #{hostname}
#     - #{hostname_ssh}
#     - #{hostname_full}
#     - #{hostname_full_ssh}
#     - #{username}
#     - #{username_ssh}
tmux_conf_theme_window_status_fg_light="$tmux_conf_theme_color_window_status_fg_light"
tmux_conf_theme_window_status_fg_dark="$tmux_conf_theme_color_window_status_fg_dark"
tmux_conf_theme_window_status_bg_light="$tmux_conf_theme_color_window_status_bg_light"
tmux_conf_theme_window_status_bg_dark="$tmux_conf_theme_color_window_status_bg_dark"
tmux_conf_theme_window_status_attr="none"
tmux_conf_theme_window_status_format="#I #W#{?window_bell_flag,🔔,}#{?window_zoomed_flag,🔍,}"

# window current status style
#   - built-in variables are:
#     - #{circled_window_index}
#     - #{circled_session_name}
#     - #{hostname}
#     - #{hostname_ssh}
#     - #{hostname_full}
#     - #{hostname_full_ssh}
#     - #{username}
#     - #{username_ssh}
tmux_conf_theme_window_status_current_fg_light="$tmux_conf_theme_color_window_status_current_fg_light"
tmux_conf_theme_window_status_current_fg_dark="$tmux_conf_theme_color_window_status_current_fg_dark"
tmux_conf_theme_window_status_current_bg_light="$tmux_conf_theme_color_window_status_current_bg_light"
tmux_conf_theme_window_status_current_bg_dark="$tmux_conf_theme_color_window_status_current_bg_dark"
tmux_conf_theme_window_status_current_attr="bold"
tmux_conf_theme_window_status_current_format="#{circled_window_index} #W#{?window_zoomed_flag,🔍,}"

# window activity status style
tmux_conf_theme_window_status_activity_fg="default"
tmux_conf_theme_window_status_activity_bg="default"
tmux_conf_theme_window_status_activity_attr="underscore"

# window bell status style
tmux_conf_theme_window_status_bell_fg_light="$tmux_conf_theme_color_window_status_bell_fg_light"
tmux_conf_theme_window_status_bell_fg_dark="$tmux_conf_theme_color_window_status_bell_fg_dark"
tmux_conf_theme_window_status_bell_bg_light="$tmux_conf_theme_color_window_status_bell_bg_light"
tmux_conf_theme_window_status_bell_bg_dark="$tmux_conf_theme_color_window_status_bell_bg_dark"
tmux_conf_theme_window_status_bell_attr="blink,bold"

# window last status style
tmux_conf_theme_window_status_last_fg_light="$tmux_conf_theme_color_window_status_last_fg_light"
tmux_conf_theme_window_status_last_fg_dark="$tmux_conf_theme_color_window_status_last_fg_dark"
tmux_conf_theme_window_status_last_bg_light="$tmux_conf_theme_color_window_status_last_bg_light"
tmux_conf_theme_window_status_last_bg_dark="$tmux_conf_theme_color_window_status_last_bg_dark"
tmux_conf_theme_window_status_last_attr="none"

# status left/right sections separators
tmux_conf_theme_left_separator_main="\uE0B0"
tmux_conf_theme_left_separator_sub="\uE0B1"
tmux_conf_theme_right_separator_main="\uE0B2"
tmux_conf_theme_right_separator_sub="\uE0B3"

# status left/right content:
#   - separate main sections with "|"
#   - separate subsections with ","
#   - built-in variables are:
#     - #{battery_bar}
#     - #{battery_hbar}
#     - #{battery_percentage}
#     - #{battery_status}
#     - #{battery_vbar}
#     - #{circled_session_name}
#     - #{hostname_ssh}
#     - #{hostname}
#     - #{hostname_full}
#     - #{hostname_full_ssh}
#     - #{loadavg}
#     - #{mouse}
#     - #{pairing}
#     - #{prefix}
#     - #{root}
#     - #{synchronized}
#     - #{uptime_y}
#     - #{uptime_d} (modulo 365 when #{uptime_y} is used)
#     - #{uptime_h}
#     - #{uptime_m}
#     - #{uptime_s}
#     - #{username}
#     - #{username_ssh}
is_desktop_screen='#(if [ "#{window_width}" -ge 364 ]; then echo "desktop"; else echo ""; fi)'

widget_battery="#{?battery_status,#{battery_status},}#{?battery_bar, #{battery_bar},}"
# TODO: Move this to a function in order to better separate screen sizes
widget_date_desktop="%b %d %l:%M%p ${tmux_conf_theme_right_separator_sub}  #(TZ="UTC" date +%%H:%%M:%%Sz)" # https://man7.org/linux/man-pages/man3/strftime.3.html
widget_date_laptop="%b %d %l:%M%p" # https://man7.org/linux/man-pages/man3/strftime.3.html
widget_date="#{?$is_desktop_screen,$widget_date_desktop,$widget_date_laptop}"
# TODO: Move this to a function because it is expensive and should only be called every 10 minutes. Moving to a function will also allow for desktop vs laptop weather
widget_weather="#(curl -m 1 wttr.in/Draper+UT?format=\"%%c\+%%t\+%%p\+%%u\+UVI\")"
widget_online="#(ping -c 1 1.1.1.1 >/dev/null 2>&1 && printf '#[fg=colour82]●#[fg=default]' || printf '#[fg=colour160]●#[fg=default]')"
widget_sysstat="#{sysstat_cpu} ${tmux_conf_theme_right_separator_sub} #{sysstat_mem} ${tmux_conf_theme_right_separator_sub} #{sysstat_loadavg}"
widget_sysstat2="#{sysstat_cpu} ${tmux_conf_theme_right_separator_sub} #{sysstat_mem}#{?$is_desktop_screen,  #{sysstat_loadavg},} "

tmux_conf_theme_status_left_light=" #S "
tmux_conf_theme_status_left_dark=" #S "

tmux_conf_theme_status_right_light=" #{username} | #{prefix}#{mouse}#{pairing}#{synchronized}$widget_battery , $widget_date | $widget_sysstat2 | $widget_weather | $widget_online "
tmux_conf_theme_status_right_dark=" #{username} | #{prefix}#{mouse}#{pairing}#{synchronized}$widget_battery , $widget_date | $widget_sysstat2 | $widget_weather | $widget_online "
# status left style
# these should be a comma separated lists with the number of elements equal to main sections in $tmux_conf_theme_status_left
tmux_conf_theme_status_left_fg_light="$color_solarized_base2"
tmux_conf_theme_status_left_fg_dark="$color_monokai_background"
tmux_conf_theme_status_left_bg_light="$color_solarized_green"
tmux_conf_theme_status_left_bg_dark="$color_monokai_green"
tmux_conf_theme_status_left_attr="bold"

# status right style
# these should be a comma separated lists with the number of elements equal to main sections in $tmux_conf_theme_status_right
tmux_conf_theme_status_right_fg_light="$color_solarized_base3,$color_solarized_base2,$color_solarized_base2,$color_solarized_base2,$color_solarized_base02"
tmux_conf_theme_status_right_fg_dark="$color_monokai_background,$color_monokai_background,$color_monokai_comments,$color_monokai_highlight,$color_monokai_background"
tmux_conf_theme_status_right_bg_light="$color_solarized_blue,$color_solarized_cyan,$color_solarized_base3,$color_solarized_violet,$color_solarized_base1"
tmux_conf_theme_status_right_bg_dark="$color_monokai_magenta,$color_monokai_yellow,$color_monokai_background,$color_monokai_blue,$color_monokai_background"
tmux_conf_theme_status_right_attr="bold,none,none,none,none"

# pairing indicator
tmux_conf_theme_pairing="⚇"                 # U+2687
tmux_conf_theme_pairing_fg="none"
tmux_conf_theme_pairing_bg="none"
tmux_conf_theme_pairing_attr="none"

# prefix indicator
tmux_conf_theme_prefix="⌨"                  # U+2328
tmux_conf_theme_prefix_fg="none"
tmux_conf_theme_prefix_bg="none"
tmux_conf_theme_prefix_attr="none"

# mouse indicator
tmux_conf_theme_mouse="↗"                   # U+2197
tmux_conf_theme_mouse_fg="none"
tmux_conf_theme_mouse_bg="none"
tmux_conf_theme_mouse_attr="none"

# root indicator
tmux_conf_theme_root="!"
tmux_conf_theme_root_fg="none"
tmux_conf_theme_root_bg="none"
tmux_conf_theme_root_attr="bold,blink"

# synchronized indicator
tmux_conf_theme_synchronized="⚏"            # U+268F
tmux_conf_theme_synchronized_fg="none"
tmux_conf_theme_synchronized_bg="none"
tmux_conf_theme_synchronized_attr="none"

# battery bar symbols
tmux_conf_battery_bar_symbol_full="♥"
tmux_conf_battery_bar_symbol_empty="♥"

# battery bar length (in number of symbols), possible values are:
#   - auto
#   - a number, e.g. 5
tmux_conf_battery_bar_length="10"

# battery bar palette, possible values are:
#   - gradient (default)
#   - heat
#   - "colour_full_fg,colour_empty_fg,colour_bg"
tmux_conf_battery_bar_palette="$color_red,$color_white,none"

# battery hbar palette, possible values are:
#   - gradient (default)
#   - heat
#   - "colour_low,colour_half,colour_full"
tmux_conf_battery_hbar_palette="gradient"
#tmux_conf_battery_hbar_palette="#d70000,#ff5f00,#5fff00"  # red, orange, green

# battery vbar palette, possible values are:
#   - gradient (default)
#   - heat
#   - "colour_low,colour_half,colour_full"
tmux_conf_battery_vbar_palette="gradient"
#tmux_conf_battery_vbar_palette="#d70000,#ff5f00,#5fff00"  # red, orange, green

# symbols used to indicate whether battery is charging or discharging
tmux_conf_battery_status_charging="🔌"     # U+1F50C
tmux_conf_battery_status_discharging="🔋"  # U+1F50B

# clock style (when you hit <prefix> + t)
# you may want to use %I:%M %p in place of %R in tmux_conf_theme_status_right
tmux_conf_theme_clock_color_light="$tmux_conf_theme_color_clock_color_light"
tmux_conf_theme_clock_color_dark="$tmux_conf_theme_color_clock_color_dark"
tmux_conf_theme_clock_style="12"

######################################
#     Appearance and Status Bar      #
######################################

# general status bar settings
set-option -g status-interval 10 # redraw status line every 10 seconds

set-option -g @sidebar-tree 'e' # toggle sidebar with a directory tree
set-option -g @sidebar-tree-focus 'w' # toggle sidebar and move cursor to it (focus it)
set-option -g @sidebar-tree-command 'tree -C' # colorize the tree directory listing in the sidebar

# Configure view templates for tmux-plugin-sysstat "MEM" and "CPU" widget
set-option -g @sysstat_mem_view_tmpl "#[fg=#{mem.color3}]MEM: #[fg=#{mem.color},bg=#{mem.color2}]#{mem.pused}#[fg=#{mem.color3}] #{mem.used}#[fg=#{cpu.color3}]#[nobold] "
set-option -g @sysstat_cpu_view_tmpl "#[fg=#{cpu.color3}]CPU: #[fg=#{cpu.color},bg=#{cpu.color2}]#{cpu.pused}#[fg=#{cpu.color3}]#[nobold] "

  # Configure colors for tmux-plugin-sysstat "MEM" and "CPU" widget
if-shell '~/.tmux/tmux_32_up/helpers/is_dark_mode_enabled.sh' {
  set-option -g @sysstat_cpu_color_low "$color_monokai_blue,bold $color_monokai_background $color_monokai_comments"
  set-option -g @sysstat_cpu_color_medium "$color_monokai_orange,bold $color_monokai_background $color_monokai_highlight"
  set-option -g @sysstat_cpu_color_stress "$color_monokai_background,bold $color_monokai_red $color_monokai_highlight"

  set-option -g @sysstat_mem_color_low "$color_monokai_blue,bold $color_monokai_background $color_monokai_comments"
  set-option -g @sysstat_mem_color_medium "$color_monokai_orange,bold $color_monokai_background $color_monokai_highlight"
  set-option -g @sysstat_mem_color_stress "$color_monokai_background,bold $color_monokai_red $color_monokai_highlight"
} {
  set-option -g @sysstat_cpu_color_low "$color_solarized_blue,bold $color_solarized_base3 $color_solarized_base03"
  set-option -g @sysstat_cpu_color_medium "$color_solarized_orange,bold $color_solarized_base3 $color_solarized_base03"
  set-option -g @sysstat_cpu_color_stress "$color_solarized_base2,bold $color_solarized_red $color_solarized_base03"

  set-option -g @sysstat_mem_color_low "$color_solarized_blue,bold $color_solarized_base3 $color_solarized_base03"
  set-option -g @sysstat_mem_color_medium "$color_solarized_orange,bold $color_solarized_base3 $color_solarized_base03"
  set-option -g @sysstat_mem_color_stress "$color_solarized_base2,bold $color_solarized_red $color_solarized_base03"
}


##################################
#      Renew Environment         #
##################################

set-option -g update-environment \
  "DISPLAY\
  SSH_ASKPASS\
  SSH_AUTH_SOCK\
  SSH_AGENT_PID\
  SSH_CONNECTION\
  SSH_TTY\
  WINDOWID\
  XAUTHORITY"

bind-key '$' run "~/.tmux/scripts/renew_env.sh"

###########################
#         Plugins         #
###########################

# Note: the tpm bindings differ slightly from upstream:
# - installing plugins: <prefix> + I
# - uninstalling plugins: <prefix> + Alt + u
# - updating plugins: <prefix> + u

# Note: do not add run-shell '~/.tmux/plugins/tpm/tpm'
# This is done by the apply_plugins applier

# to enable a plugin, use the 'set-option -g @plugin' syntax:
# visit https://github.com/tmux-plugins for available plugins
# Note: do not add set-option -g @plugin 'tmux-plugins/tpm'
set-option -g @tpm_plugins ' \
    tmux-plugins/tmux-battery \
    tmux-plugins/tmux-online-status \
    tmux-plugins/tmux-sidebar \
    tmux-plugins/tmux-copycat \
    tmux-plugins/tmux-open \
    samoshkin/tmux-plugin-sysstat \
  '

# whenever a plugin introduces a variable to be used in 'status-left' or
# 'status-right', you can use it in 'tmux_conf_theme_status_left' and
# 'tmux_conf_theme_status_right' variables.

# by default, launching tmux will update tpm and all plugins
#   - true (default)
#   - false
tmux_conf_update_plugins_on_launch=true

# by default, reloading the configuration will update tpm and all plugins
#   - true (default)
#   - false
tmux_conf_update_plugins_on_reload=true

# by default, reloading the configuration will uninstall tpm and plugins when no
# plugins are enabled
#   - true (default)
#   - false
tmux_conf_uninstall_plugins_on_reload=true

##############################################
#      Nesting Local and Remote Session      #
##############################################

# new pane tries to reconnect ssh sessions, possible values are:
#   - true
#   - false (default)
#   - disabled (do not modify split-window bindings)
tmux_conf_new_pane_reconnect_ssh=false

# Session is considered to be remote when we ssh into host
if-shell 'test -n "$SSH_CLIENT"' \
    'source-file ~/.tmux/tmux_32_up/tmux_32_up.remote.conf'

# We want to have single prefix key "C-j", usable both for local and remote session
# we don't want to use the "C-j" + "j" approach either
# Idea is to turn off all key bindings and prefix handling on local session,
# so that all keystrokes are passed to inner/remote session

# see: toggle on/off all keybindings · Issue #237 · tmux/tmux - https://github.com/tmux/tmux/issues/237

# Also, change some visual styles when window keys are off
bind-key -T root F12  \
    set-option prefix None \;\
    set-option key-table off \;\
    set-option status-style "fg=$color_status_text,bg=$color_window_off_status_bg" \;\
    set-option window-status-current-format "#[fg=$color_window_off_status_bg,bg=$color_window_off_status_current_bg]$separator_powerline_right_hard#[default] #I:#W# ##[fg=$color_window_off_status_current_bg,bg=$color_window_off_status_bg]$separator_powerline_right_hard#[default]" \;\
    set-option window-status-current-style "fg=$color_dark,bold,bg=$color_window_off_status_current_bg" \;\
    if-shell -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
    refresh-client -S \;\

bind-key -T off F12 \
  set-option -u prefix \;\
  set-option -u key-table \;\
  set-option -u status-style \;\
  set-option -u window-status-current-style \;\
  set-option -u window-status-current-format \;\
  refresh-client -S

##############################################
#             Apply Configuration            #
##############################################

run '~/.tmux/tmux_32_up/tmux_32_up.sh apply_configuration'
